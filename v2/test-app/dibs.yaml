paths:
  watch: . # The path to watch
  include: (.*).go # Regex of paths to include
  assetInImage: /usr/local/bin/test-app # Path of the asset in the Docker image
  assetOut: .bin/binaries/test-app # Path to the file to which the asset should be copied
  gitRepoRoot: ../.. # Root of the Git repo
commands:
  generateSources: go generate ./... # Command to generate sources
  build: go build -o .bin/binaries/test-app main.go # Command to build binary
  unitTests: go test ./... # Command to run unit test
  integrationTests: .bin/binaries/test-app -help # Command to run integration test
  imageTests: docker run pojntfx/test-app /usr/local/bin/test-app -help # Command to run to test the Docker image
  chartTests: helm install --name test-app .bin/chart/test-app-*.tgz && helm delete --purge test-app # Command to run to test the Helm chart
  start: .bin/binaries/test-app -keep-running # Command to start the app
docker:
  build: # The main Docker config
    file: Dockerfile
    context: .
    tag: pojntfx/test-app
  unitTests: # Docker configuration for unit tests
    file: Dockerfile.unitTests
    context: .
    tag: pojntfx/test-app-unit-tests
  integrationTests: # Docker configuration for integration tests
    file: Dockerfile.integrationTests
    context: .
    tag: pojntfx/test-app-integration-tests
  chartTests: # Docker configuration for chart tests
    file: Dockerfile.chartTests
    context: .
    tag: pojntfx/test-app-chart-tests
helm:
  src: charts/test-app # The source directory of the Helm chart
  dist: .bin/chart # The directory into which the built chart should go
