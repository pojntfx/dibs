.dibsJob: &dibsJob
  image: docker:stable
  services:
    - name: docker:dind
      command:
        - "--experimental"
  variables:
    DOCKER_HOST: tcp://docker:2375/
  before_script:
    # Install curl and tar
    - apk add -u curl tar
    # Install qemu-user-static
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    # Install buildx
    - curl -Lo /tmp/docker-buildx https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64
    - mkdir -p ~/.docker/cli-plugins/
    - install /tmp/docker-buildx ~/.docker/cli-plugins
    - docker buildx create --name dibs
    - docker buildx use dibs
    - docker buildx inspect --bootstrap
    # Install ghr
    - curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz | tar -zvxf - ghr_v0.13.0_linux_amd64/ghr
    - chmod +x ghr_v0.13.0_linux_amd64/ghr
    - mv ghr_v0.13.0_linux_amd64/ghr /usr/local/bin/ghr
    # Install Chart Releaser
    - curl -L https://github.com/helm/chart-releaser/releases/download/v0.2.3/chart-releaser_0.2.3_linux_amd64.tar.gz | tar -zvxf - cr
    - chmod +x cr
    - mv cr /usr/local/bin/cr
    # Install dibs
    - curl -Lo /tmp/dibs https://nx904.your-storageshare.de/s/ZWxkmmQW37fHt9J/download
    - install /tmp/dibs /usr/local/bin
    # Login to Docker Hub
    - docker login ${DOCKER_REGISTRY} --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}

stages:
  - unitTest
  - integrationTest
  - buildAndPushImage
  - buildAndPushManifestAndBinaries
  - buildAndPushChart

# Unit tests
unitTestAMD64:
  <<: *dibsJob
  stage: unitTest
  script:
    - dibs -configFile test-app/dibs.yaml -unitTests -target linux -platform linux/amd64 -docker
unitTestARM64:
  <<: *dibsJob
  stage: unitTest
  script:
    - dibs -configFile test-app/dibs.yaml -unitTests -target linux -platform linux/arm64 -docker

# Integration tests
integrationTestAMD64:
  <<: *dibsJob
  stage: integrationTest
  script:
    - dibs -configFile test-app/dibs.yaml -integrationTests -target linux -platform linux/amd64 -docker
integrationTestARM64:
  <<: *dibsJob
  stage: integrationTest
  script:
    - dibs -configFile test-app/dibs.yaml -integrationTests -target linux -platform linux/arm64 -docker

# Image tests
imageTestsAMD64:
  <<: *dibsJob
  stage: integrationTest
  script:
    - dibs -configFile test-app/dibs.yaml -buildImage -target linux -platform linux/amd64
    - dibs -configFile test-app/dibs.yaml -imageTests -target linux -platform linux/amd64
imageTestsARM64:
  <<: *dibsJob
  stage: integrationTest
  script:
    - dibs -configFile test-app/dibs.yaml -buildImage -target linux -platform linux/arm64
    - dibs -configFile test-app/dibs.yaml -imageTests -target linux -platform linux/arm64

# Chart tests
chartTestsAMD64:
  <<: *dibsJob
  stage: integrationTest
  script:
    - dibs -configFile test-app/dibs.yaml -buildImage -target linux -platform linux/amd64
    - dibs -configFile test-app/dibs.yaml -buildManifest -target linux
    - dibs -configFile test-app/dibs.yaml -chartTests -target linux -platform linux/amd64 -docker
chartTestsARM64:
  <<: *dibsJob
  stage: integrationTest
  script:
    - dibs -configFile test-app/dibs.yaml -buildImage -target linux -platform linux/arm64
    - dibs -configFile test-app/dibs.yaml -buildManifest -target linux
    - dibs -configFile test-app/dibs.yaml -chartTests -target linux -platform linux/arm64 -docker

# Build and push image
buildAndPushImageAMD64:
  <<: *dibsJob
  stage: buildAndPushImage
  script:
    - dibs -configFile test-app/dibs.yaml -buildImage -target linux -platform linux/amd64
    - dibs -configFile test-app/dibs.yaml -pushImage -target linux -platform linux/amd64
  only:
    - tags
buildAndPushImageARM64:
  <<: *dibsJob
  stage: buildAndPushImage
  script:
    - dibs -configFile test-app/dibs.yaml -buildImage -target linux -platform linux/arm64
    - dibs -configFile test-app/dibs.yaml -pushImage -target linux -platform linux/arm64
  only:
    - tags

# Build and push manifest
buildAndPushManifest:
  <<: *dibsJob
  stage: buildAndPushManifestAndBinaries
  script:
    - dibs -configFile test-app/dibs.yaml -buildManifest -target linux
    - dibs -configFile test-app/dibs.yaml -pushManifest -target linux
  only:
    - tags

# Build and push binaries
buildAndPushBinariesAMD64:
  <<: *dibsJob
  stage: buildAndPushManifestAndBinaries
  script:
    - dibs -configFile test-app/dibs.yaml -build -target linux -platform linux/amd64 -docker
    - dibs -configFile test-app/dibs.yaml -pushBinary -target linux -platform linux/amd64
  artifacts:
    name: binaries-amd64
    paths:
      - test-app/.bin/binaries
    expire_in: 1 month
  only:
    - tags
buildAndPushBinariesARM64:
  <<: *dibsJob
  stage: buildAndPushManifestAndBinaries
  script:
    - dibs -configFile test-app/dibs.yaml -build -target linux -platform linux/arm64 -docker
    - dibs -configFile test-app/dibs.yaml -pushBinary -target linux -platform linux/arm64
  artifacts:
    name: binaries-arm64
    paths:
      - test-app/.bin/binaries
    expire_in: 1 month
  only:
    - tags

# Build and push chart
buildAndPushChart:
  <<: *dibsJob
  stage: buildAndPushChart
  script:
    - dibs -configFile test-app/dibs.yaml -buildChart -target linux
    - dibs -configFile test-app/dibs.yaml -pushChart -target linux
  artifacts:
    name: chart
    paths:
      - test-app/.bin/chart
    expire_in: 1 month
  only:
    - tags
