# dibs GitLab CI/CD configuration
#
# See https://gist.github.com/pojntfx/100dd092090672c512364f5a6acf821c if you want to run the job locally.
#
# Required env variables (examples):
# DOCKER_REGISTRY="docker.io"
# DOCKER_USERNAME="pojntfx"
# DOCKER_PASSWORD="awr9sdfiwr" # Mask this
# DIBS_GITHUB_USER_NAME="pojntfx"
# DIBS_GITHUB_TOKEN="erasdf9wrdsf" # Mask this
# DIBS_GITHUB_REPOSITORY="dibs" # Corresponds to `pojntfx/dibs`
# DIBS_GIT_USER_NAME="pojntfx"
# DIBS_GIT_USER_EMAIL="felicitas@pojtinger.com"
# DIBS_GIT_COMMIT_MESSAGE="chore: Update Helm charts"
# DIBS_GITHUB_REPOSITORY_NAME="charts" # Corresponds to `pojntfx/charts`
# DIBS_GITHUB_REPOSITORY_URL="https://github.com/pojntfx/charts.git"
# DIBS_GITHUB_PAGES_URL="https://pojntfx.github.io/charts/"

.dibsJob: &dibsJob
  image: docker:stable
  services:
    - name: docker:dind
      command:
        - "--experimental"
  variables:
    DOCKER_HOST: tcp://docker:2375/
  before_script:
    # Install curl and tar
    - apk add -u curl tar
    # Install qemu-user-static
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    # Install buildx
    - curl -Lo /tmp/docker-buildx https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64
    - mkdir -p ~/.docker/cli-plugins/
    - install /tmp/docker-buildx ~/.docker/cli-plugins
    - docker buildx create --name dibs
    - docker buildx use dibs
    - docker buildx inspect --bootstrap
    # Install Helm
    - curl -L https://get.helm.sh/helm-v2.16.1-linux-amd64.tar.gz | tar -zvxf - linux-amd64/helm -O >/tmp/helm
    - install /tmp/helm /usr/local/bin
    - helm init --client-only
    # Install ghr
    - curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz | tar -zvxf - ghr_v0.13.0_linux_amd64/ghr
    - install ghr_v0.13.0_linux_amd64/ghr /usr/local/bin
    # Install Chart Releaser
    - curl -L https://github.com/helm/chart-releaser/releases/download/v0.2.3/chart-releaser_0.2.3_linux_amd64.tar.gz | tar -zvxf - cr
    - install cr /usr/local/bin
    # Install dibs
    - curl -Lo /tmp/dibs https://nx904.your-storageshare.de/s/ZWxkmmQW37fHt9J/download
    - install /tmp/dibs /usr/local/bin
    # Login to Docker Hub
    - docker login ${DOCKER_REGISTRY} --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}

stages:
  - dibs:unitTest
  - dibs:integrationTest
  - dibs:buildAndPushBinaries
  - test-app:unitTest
  - test-app:integrationTest
  - test-app:buildAndPushImage
  - test-app:buildAndPushManifestAndBinaries
  - test-app:buildAndPushChart

## dibs
# Unit tests
dibs:unitTestAMD64:
  <<: *dibsJob
  stage: dibs:unitTest
  script:
    - dibs -unitTests -target linux -platform linux/amd64 -docker
dibs:unitTestARM64:
  <<: *dibsJob
  stage: dibs:unitTest
  script:
    - dibs -unitTests -target linux -platform linux/arm64 -docker

# Integration tests
dibs:integrationTestAMD64:
  <<: *dibsJob
  stage: dibs:integrationTest
  script:
    - dibs -integrationTests -target linux -platform linux/amd64 -docker
dibs:integrationTestARM64:
  <<: *dibsJob
  stage: dibs:integrationTest
  script:
    - dibs -integrationTests -target linux -platform linux/arm64 -docker

# Build and push binaries
dibs:buildAndPushBinariesAMD64:
  <<: *dibsJob
  stage: dibs:buildAndPushBinaries
  script:
    - dibs -build -target linux -platform linux/amd64 -docker
    - dibs -pushBinary -target linux -platform linux/amd64
  artifacts:
    name: dibs-binaries-amd64
    paths:
      - .bin/binaries
    expire_in: 1 month
  only:
    - tags
dibs:buildAndPushBinariesARM64:
  <<: *dibsJob
  stage: dibs:buildAndPushBinaries
  script:
    - dibs -build -target linux -platform linux/arm64 -docker
    - dibs -pushBinary -target linux -platform linux/arm64
  artifacts:
    name: dibs-binaries-arm64
    paths:
      - .bin/binaries
    expire_in: 1 month
  only:
    - tags

## test-app
# Unit tests
test-app:unitTestAMD64:
  <<: *dibsJob
  stage: test-app:unitTest
  script:
    - dibs -configFile test-app/dibs.yaml -unitTests -target linux -platform linux/amd64 -docker
test-app:unitTestARM64:
  <<: *dibsJob
  stage: test-app:unitTest
  script:
    - dibs -configFile test-app/dibs.yaml -unitTests -target linux -platform linux/arm64 -docker

# Integration tests
test-app:integrationTestAMD64:
  <<: *dibsJob
  stage: test-app:integrationTest
  script:
    - dibs -configFile test-app/dibs.yaml -integrationTests -target linux -platform linux/amd64 -docker
test-app:integrationTestARM64:
  <<: *dibsJob
  stage: test-app:integrationTest
  script:
    - dibs -configFile test-app/dibs.yaml -integrationTests -target linux -platform linux/arm64 -docker

# Image tests
# amd64 is disabled for now due to a GitLab bug where it does not exit after being run
#test-app:imageTestsAMD64:
#  <<: *dibsJob
#  stage: test-app:integrationTest
#  script:
#    - dibs -configFile test-app/dibs.yaml -buildImage -target linux -platform linux/amd64
#    - dibs -configFile test-app/dibs.yaml -imageTests -target linux -platform linux/amd64
test-app:imageTestsARM64:
  <<: *dibsJob
  stage: test-app:integrationTest
  script:
    - dibs -configFile test-app/dibs.yaml -buildImage -target linux -platform linux/arm64
    - dibs -configFile test-app/dibs.yaml -imageTests -target linux -platform linux/arm64

# Chart tests
test-app:chartTestsAMD64:
  <<: *dibsJob
  stage: test-app:integrationTest
  script:
    - dibs -configFile test-app/dibs.yaml -buildImage -target linux -platform linux/amd64
    - dibs -configFile test-app/dibs.yaml -buildManifest -target linux
    - dibs -configFile test-app/dibs.yaml -chartTests -target linux -platform linux/amd64 -docker
test-app:chartTestsARM64:
  <<: *dibsJob
  stage: test-app:integrationTest
  script:
    - dibs -configFile test-app/dibs.yaml -buildImage -target linux -platform linux/arm64
    - dibs -configFile test-app/dibs.yaml -buildManifest -target linux
    - dibs -configFile test-app/dibs.yaml -chartTests -target linux -platform linux/arm64 -docker

# Build and push image
test-app:buildAndPushImageAMD64:
  <<: *dibsJob
  stage: test-app:buildAndPushImage
  script:
    - dibs -configFile test-app/dibs.yaml -buildImage -target linux -platform linux/amd64
    - dibs -configFile test-app/dibs.yaml -pushImage -target linux -platform linux/amd64
  only:
    - tags
test-app:buildAndPushImageARM64:
  <<: *dibsJob
  stage: test-app:buildAndPushImage
  script:
    - dibs -configFile test-app/dibs.yaml -buildImage -target linux -platform linux/arm64
    - dibs -configFile test-app/dibs.yaml -pushImage -target linux -platform linux/arm64
  only:
    - tags

# Build and push manifest
test-app:buildAndPushManifest:
  <<: *dibsJob
  stage: test-app:buildAndPushManifestAndBinaries
  script:
    - dibs -configFile test-app/dibs.yaml -buildManifest -target linux
    - dibs -configFile test-app/dibs.yaml -pushManifest -target linux
  only:
    - tags

# Build and push binaries
test-app:buildAndPushBinariesAMD64:
  <<: *dibsJob
  stage: test-app:buildAndPushManifestAndBinaries
  script:
    - dibs -configFile test-app/dibs.yaml -build -target linux -platform linux/amd64 -docker
    - dibs -configFile test-app/dibs.yaml -pushBinary -target linux -platform linux/amd64
  artifacts:
    name: test-app-binaries-amd64
    paths:
      - test-app/.bin/binaries
    expire_in: 1 month
  only:
    - tags
test-app:buildAndPushBinariesARM64:
  <<: *dibsJob
  stage: test-app:buildAndPushManifestAndBinaries
  script:
    - dibs -configFile test-app/dibs.yaml -build -target linux -platform linux/arm64 -docker
    - dibs -configFile test-app/dibs.yaml -pushBinary -target linux -platform linux/arm64
  artifacts:
    name: test-app-binaries-arm64
    paths:
      - test-app/.bin/binaries
    expire_in: 1 month
  only:
    - tags

# Build and push chart
test-app:buildAndPushChart:
  <<: *dibsJob
  stage: test-app:buildAndPushChart
  script:
    - dibs -configFile test-app/dibs.yaml -buildChart -target linux
    - dibs -configFile test-app/dibs.yaml -pushChart -target linux
  artifacts:
    name: test-app-chart
    paths:
      - test-app/.bin/chart
    expire_in: 1 month
  only:
    - tags
