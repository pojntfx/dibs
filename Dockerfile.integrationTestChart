# syntax=docker/dockerfile:experimental
FROM --platform=$TARGETPLATFORM golang:1.13.5-buster AS build
WORKDIR /app
ARG TARGETPLATFORM

RUN curl -L https://get.helm.sh/helm-v2.16.1-linux-amd64.tar.gz | tar -zvxf - linux-amd64/helm -O >./helm
RUN chmod +x ./helm
RUN mv ./helm /usr/local/bin/helm

COPY ./go.mod ./go.sum ./
RUN go mod download

COPY ./.dibs.yml ./.dibs.yml
COPY ./main.go ./main.go
COPY ./cmd ./cmd
COPY ./pkg ./pkg

RUN mkdir -p .bin # go run main.go pipeline build chart --platform $TARGETPLATFORM

FROM --platform=$TARGETPLATFORM docker:stable
WORKDIR /app
ARG TARGETPLATFORM

RUN apk update
RUN apk add curl go git tar

RUN curl -L https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl >./kubectl
RUN chmod +x ./kubectl
RUN mv ./kubectl /usr/local/bin/kubectl

RUN curl -L https://get.helm.sh/helm-v2.16.1-linux-amd64.tar.gz | tar -zvxf - linux-amd64/helm -O >./helm
RUN chmod +x ./helm
RUN mv ./helm /usr/local/bin/helm

RUN curl -L https://github.com/rancher/k3d/releases/download/v1.3.4/k3d-linux-amd64 >./k3d
RUN chmod +x ./k3d
RUN mv ./k3d /usr/local/bin/k3d

COPY ./go.mod ./go.sum ./
RUN go mod download

COPY ./.dibs.yml ./.dibs.yml
COPY ./main.go ./main.go
COPY ./cmd ./cmd
COPY ./pkg ./pkg

COPY --from=build /app/.bin ./.bin

CMD k3d delete; k3d create --server-arg "--tls-san=$IP" &&\
    sleep 15 &&\
    mkdir -p ~/.kube &&\
    cat $(k3d get-kubeconfig --name='k3s-default') | sed -e "s/127.0.0.1/$IP/g" > ~/.kube/config &&\
    cat ~/.kube/config &&\
    printf "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: tiller\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: tiller\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n  - kind: ServiceAccount\n    name: tiller\n    namespace: kube-system\n" > /tmp/helm-rbac.yaml &&\
    kubectl apply -f /tmp/helm-rbac.yaml &&\
    helm init --service-account tiller &&\
    sleep 25 &&\
    go run main.go pipeline test integration image --platform $TARGETPLATFORM; k3d delete
